{"version":3,"sources":["redux/actions/variables.js","pages/loading/Loading.js","redux/actions/Actions.js","components/navbar/NavBar.js","pages/home/Home.js","pages/create/Create.js","pages/detail/Detail.js","App.js","reportWebVitals.js","redux/reducers/Reducer.js","redux/store/index.js","index.js"],"names":["SUMA","Loading","dispatch","useDispatch","state","useSelector","s","onHandlerClick","type","to","onClick","count","NavBar","Home","Create","Detail","App","className","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","composeEnhancers","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAWA,G,YAAO,Q,yBCKH,SAASC,IACpB,IAAIC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAC,OAAIA,KAE7B,SAASC,IACPL,ECNK,CACHM,KAAMR,IDQV,OACE,gCACE,yCACI,cAAC,IAAD,CAAMS,GAAG,QAAT,SAAiB,yCACjB,wBAAQC,QAAS,kBAAIH,KAArB,kBACJ,6BAAKH,EAAMO,W,WEhBJ,SAASC,IACtB,OACE,yCCFW,SAASC,IACtB,OACE,8BACE,cAACD,EAAD,MCHS,SAASE,IACtB,OACE,yCCFW,SAASC,IACtB,OACE,yCCgBWC,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAClB,EAAD,MACzB,cAAC,IAAD,CAAOiB,KAAK,QAAQC,QAAS,cAACN,EAAD,MAC7B,cAAC,IAAD,CAAOK,KAAK,UAAUC,QAAS,cAACL,EAAD,MAC/B,cAAC,IAAD,CAAOI,KAAK,UAAUC,QAAS,cAACJ,EAAD,YCFtBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCLVQ,EAAe,CACflB,MAAO,G,YCGLmB,EAAmBC,OAAOC,qCAAuCC,IAGjEC,EAAQC,aDHC,WAA4C,IAA9B/B,EAA6B,uDAArByB,EAAcO,EAAO,uCACtD,OAAQA,EAAO5B,OACNR,EACE,2BACAI,GADP,IAEIO,MAAOP,EAAMO,MAAQ,IAGlB,eAAIP,KCHf0B,EACIO,YAAgBC,OAITJ,ICPfK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.065523b7.chunk.js","sourcesContent":["export let SUMA = 'SUMA'","import React from 'react'\r\nimport {suma} from '../../redux/actions/Actions'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Loading() {\r\n    let dispatch = useDispatch()\r\n    let state = useSelector(s => s)\r\n  \r\n    function onHandlerClick(){\r\n      dispatch(suma())\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Iniciar</h1>\r\n            <Link to='/home'><button>x</button></Link>\r\n            <button onClick={()=>onHandlerClick()}>Suma</button>\r\n        <h3>{state.count}</h3>\r\n      </div>\r\n    )\r\n}\r\n","import { SUMA } from \"./variables\";\r\n\r\n\r\nexport function suma() {\r\n    return {\r\n        type: SUMA\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <div>NavBar</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport NavBar from '../../components/navbar/NavBar'\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Create() {\r\n  return (\r\n    <div>Create</div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Detail() {\r\n  return (\r\n    <div>Detail</div>\r\n  )\r\n}\r\n","import './App.css';\nimport Loading from './pages/loading/Loading';\nimport { Route, Routes} from \"react-router-dom\";\nimport Home from './pages/home/Home'\nimport Create from './pages/create/Create'\nimport Detail from './pages/detail/Detail'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Routes>\n      <Route path='/' element={<Loading/>}/>\n      <Route path='/home' element={<Home/>}/>\n      <Route path='/create' element={<Create/>}/>\n      <Route path='/detail' element={<Detail/>}/>\n    </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SUMA } from \"../actions/variables\"\r\n\r\nlet initialState = {\r\n    count: 0\r\n}\r\n\r\nexport default function root(state = initialState, action){\r\n    switch (action.type) {\r\n        case SUMA:\r\n        return {\r\n            ...state,\r\n            count: state.count + 1\r\n        }\r\n        default:\r\n        return {...state}\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport root from '../reducers/Reducer'\r\nimport thunk from 'redux-thunk';\r\n//import combineReducer from 'redux'\r\n\r\n//let reducers = combineReducer(root)\r\nconst composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(\r\n    root,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/index'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}